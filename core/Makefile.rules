################################################################################
# This file contains general building rules with configuration info
#
# Include this file to the each subdirectory makefile. Note that REL_ADDR 
# variable has to be defined if we are in deeper subdirectory.
#
# If you need only project configuration data, use Makefile.flags instead
################################################################################

# Define MAKEFLAGS only for top level makes as this variable is inherited 
# down in recursion
ifeq ($(MAKELEVEL),0)
MAKEFLAGS += -j4
endif

include $(REL_ADDR)Makefile.flags

# All files which might have an impact on compilation
# Makefile.flags and Makefile.rules are generated by configure so 
# they should be definitely here.
# Specific makefiles can define their specific files by means of 
# EXTRA_REBUILD_FORCE_FILES variable
REBUILD_FORCE_FILES = $(REL_ADDR)Makefile.flags \
	$(REL_ADDR)Makefile.rules $(EXTRA_REBUILD_FORCE_FILES)

####### Implicit rules

%.o: %.cpp $(REBUILD_FORCE_FILES)
	$(CXX) -c $(CXXFLAGS) $(MANDATORY_INCPATH) -o $@ $<

%.o: %.cc $(REBUILD_FORCE_FILES)
	$(CXX) -c $(CXXFLAGS) $(MANDATORY_INCPATH) -o $@ $<

%.o: .cxx $(REBUILD_FORCE_FILES)
	$(CXX) -c $(CXXFLAGS) $(MANDATORY_INCPATH) -o $@ $<

%.o: %.C $(REBUILD_FORCE_FILES)
	$(CXX) -c $(CXXFLAGS) $(MANDATORY_INCPATH) -o $@ $<

%.o: %.c $(REBUILD_FORCE_FILES)
	$(CC) -c $(CFLAGS) $(MANDATORY_INCPATH) -o $@ $<

